name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  ENVIRONMENT: trackify-prod
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: trackify-prod
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set environment specific variables
        id: vars
        run: |
          echo "::set-output name=aws_access_key_id::${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', env.ENVIRONMENT)] }}"
          echo "::set-output name=aws_secret_access_key::${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ENVIRONMENT)] }}"
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.vars.outputs.aws_access_key_id }}
          aws-secret-access-key: ${{ steps.vars.outputs.aws_secret_access_key }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: trackify-backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ./aws/Trackify-nodejs-backendg.json
          container-name: trackify-backed
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: trackify-service
          cluster: trackify-nodejs
          wait-for-service-stability: true
